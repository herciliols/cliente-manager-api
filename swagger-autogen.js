const swaggerAutogen = require('swagger-autogen')({openapi: '3.0.0'});

const outputFile = './swagger-output.json';
const endpointsFiles = ['src/modules/login/authRoutes.ts', 
                        'src/modules/customers/customersRoutes.ts']; 


const doc = {
    info: {
        version: "1.0.0",
        title: "Client Manager API",
        description: "Documentation automatically generated by the <b>swagger-autogen</b> module."
    },
    servers: [
      {
        url: 'http://localhost:3000', 
      },
    ],
    tags: [
      {
        auth: '',  
      },
    ],
    components: {
        schemas: {
            LoginPostRequest: {
                $username: "usuario",
                $password: "123"
            },
            LoginResponseSuccess: {
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInVzZXJuYW1lIjoidXN1YXJpbyIsImlhdCI6MTcwODczOTE5MiwiZXhwIjoxNzA4NzM5NzkyfQ.GsZwa_ItPy6cl7dlC43ivB3eVIseA4IuoVGxuRjCqjo"
            },
            LoginResponseBadRequest: {
                error: "Bad Request",
                message: "Campos obrigatórios 'username' e 'password' são necessários e não podem estar vazios."
            },
            LoginResponseUnauthorized: {
                error: "Unauthorized",
                message: "Credenciais inválidas. A autenticação é necessária para acessar este recurso."
            },
            LoginResponseInternalServerError: {
                error: "Internal Server Error",
                message: "Ocorreu um erro interno no servidor"
            },
            CustomerReadDTO: {
                id: 1,
                nome: "João",
                sobrenome: "Silva",
                sexo: "Masculino",
                data_nascimento: "1990-01-01T02:00:00.000Z"
            },
            CustomerUpdateDTO: {
                nome: "João",
                sobrenome: "Silva",
                sexo: "Masculino",
                data_nascimento: "1990-01-01T02:00:00.000Z"
            }
        },
        securitySchemes:{
            bearerAuth: {
                type: 'http',
                scheme: 'bearer'
            }
        }
    }       
  };

swaggerAutogen(outputFile, endpointsFiles, doc);